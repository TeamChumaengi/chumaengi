plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.Chumaengi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	//JPA & DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2' //test db

	//Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//SpringSecurity
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Rest Docs (With MockMvc)
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

// test task output 디렉토리를 snippetsDir(스니펫 저장 위치)로 지정
tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

// asciidoctor task의 input -> snippetsDir(스니펫 저장 위치)
tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor

	copy {
		from "${asciidoctor.outputDir}"
		into file("src/main/resources/static/docs")
	}

	copy {
		from file("src/main/resources/static")
		into file("build/resources/main/static")
	}
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs/*')
}
